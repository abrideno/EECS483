<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>CPU Registers</TITLE>
<META NAME="description" CONTENT="CPU Registers">
<META NAME="keywords" CONTENT="spim">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<LINK REL=STYLESHEET HREF="spim.css">
</HEAD>
<BODY LANG="EN">
 <A NAME="tex2html157" HREF="node11.htm"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT="next" SRC="next.gif"></A> <A NAME="tex2html155" HREF="node9.htm"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT="up" SRC="up.gif"></A> <A NAME="tex2html149" HREF="node9.htm"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT="previous" SRC="prev.gif"></A>   <BR>
<B> Next:</B> <A NAME="tex2html158" HREF="node11.htm">Byte Order</A>
<B>Up:</B> <A NAME="tex2html156" HREF="node9.htm">Description of the MIPS </A>
<B> Previous:</B> <A NAME="tex2html150" HREF="node9.htm">Description of the MIPS </A>
<BR> <P>
<H2><A NAME="SECTION00021000000000000000">CPU Registers</A></H2>
<P>
<P><A NAME="285">&#160;</A><A NAME="tabreg">&#160;</A> <IMG WIDTH=522 HEIGHT=635 ALIGN=BOTTOM ALT="table274" SRC="img8.gif"  > <BR>
<STRONG>Table:</STRONG> MIPS registers and the convention governing their use.<BR>
<P>
<P>
The MIPS (and SPIM) central processing unit contains 32 general
purpose registers that are numbered 0-31.  Register <I>n</I> is designated
by <TT>$n</TT>.  Register <TT>$0</TT> always contains the hardwired value
0.  MIPS has established a set of conventions as to how registers
should be used.  These suggestions are guidelines, which are not
enforced by the hardware.  However a program that violates them will
not work properly with other software.  Table&nbsp;<A HREF="node10.htm#tabreg"><IMG  ALIGN=BOTTOM ALT="gif" SRC="xref.gif"></A> lists the
registers and describes their intended use.
<P>
Registers <TT>$at</TT> (1), <TT>$k0</TT> (26), and <TT>$k1</TT> (27) are
reserved for use by the assembler and operating system.
<P>
Registers <TT>$a0</TT>-<TT>$a3</TT> (4-7) are used to pass the first
four arguments to routines (remaining arguments are passed on the
stack).  Registers <TT>$v0</TT> and <TT>$v1</TT> (2, 3) are used to return
values from functions.  Registers <TT>$t0</TT>-<TT>$t9</TT> (8-15, 24,
25) are caller-saved registers used for temporary quantities that do
not need to be preserved across calls.  Registers <TT>$s0</TT>-<TT>
$s7</TT> (16-23) are callee-saved registers that hold long-lived values
that should be preserved across calls.
<P>
Register <TT>$sp</TT> (29) is the stack pointer, which points to the last
location in use on the stack.<A NAME="tex2html10" HREF="footnode.htm#953"><IMG  ALIGN=BOTTOM ALT="gif" SRC="foot.gif"></A>  Register <TT>$fp</TT> (30) is the frame
pointer.<A NAME="tex2html11" HREF="footnode.htm#954"><IMG  ALIGN=BOTTOM ALT="gif" SRC="foot.gif"></A> Register <TT>$ra</TT>
(31) is written with the return address for a call by the <TT>jal</TT>
instruction.
<P>
Register <TT>$gp</TT> (28) is a global pointer that points into the
middle of a 64K block of memory in the heap that holds constants and
global variables.  The objects in this heap can be quickly accessed
with a single load or store instruction.
<P>
In addition, coprocessor 0 contains registers that are useful to
handle exceptions.  SPIM does not implement all of these registers,
since they are not of much use in a simulator or are part of the
memory system, which is not implemented.  However, it does provide the
following:
<P>
  <P> <IMG WIDTH=669 HEIGHT=114 ALIGN=BOTTOM ALT="tabular310" SRC="img9.gif"  > <P>
<P>
These registers are part of coprocessor 0's register set and are
accessed by the <TT>lwc0</TT>, <TT>mfc0</TT>, <TT>mtc0</TT>, and <TT>swc0</TT>
instructions.
<P>
<P><A NAME="956">&#160;</A><A NAME="figstatus_reg">&#160;</A> <IMG WIDTH=773 HEIGHT=173 ALIGN=BOTTOM ALT="figure323" SRC="img10.gif"  > <BR>
<STRONG>Figure:</STRONG> The <TT>Status</TT> register.<BR>
<P>
<P><A NAME="958">&#160;</A><A NAME="figcause_reg">&#160;</A> <IMG WIDTH=770 HEIGHT=138 ALIGN=BOTTOM ALT="figure328" SRC="img11.gif"  > <BR>
<STRONG>Figure:</STRONG> The <TT>Cause</TT> register.<BR>
<P>
Figure&nbsp;<A HREF="node10.htm#figstatus_reg"><IMG  ALIGN=BOTTOM ALT="gif" SRC="xref.gif"></A> describes the bits in the <TT>Status</TT>
register that are implemented by SPIM.  The <TT>interrupt mask</TT>
contains a bit for each of the five interrupt levels.  If a bit is
one, interrupts at that level are allowed.  If the bit is zero,
interrupts at that level are disabled.  The low six bits of the <TT>
Status</TT> register implement a three-level stack for the <TT>
kernel/user</TT> and <TT>interrupt enable</TT> bits.  The <TT>kernel/user</TT>
bit is 0 if the program was running in the kernel when the interrupt
occurred and 1 if it was in user mode. If the <TT>interrupt enable</TT>
bit is 1, interrupts are allowed.  If it is 0, they are disabled. At an
interrupt, these six bits are shifted left by two bits, so the current
bits become the previous bits and the previous bits become the old
bits.  The current bits are both set to 0 (i.e., kernel mode with
interrupts disabled).
<P>
Figure&nbsp;<A HREF="node10.htm#figcause_reg"><IMG  ALIGN=BOTTOM ALT="gif" SRC="xref.gif"></A> describes the bits in the <TT>Cause</TT>
registers.  The five <TT>pending interrupt</TT> bits correspond to the
five interrupt levels.  A bit becomes 1 when an interrupt at its level
has occurred but has not been serviced.  The <TT>exception code</TT>
register contains a code from the following table describing the cause
of an exception.
<P>
  <P> <IMG WIDTH=595 HEIGHT=222 ALIGN=BOTTOM ALT="tabular346" SRC="img12.gif"  > <P><HR><A NAME="tex2html157" HREF="node11.htm"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT="next" SRC="next.gif"></A> <A NAME="tex2html155" HREF="node9.htm"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT="up" SRC="up.gif"></A> <A NAME="tex2html149" HREF="node9.htm"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT="previous" SRC="prev.gif"></A>   <BR>
<B> Next:</B> <A NAME="tex2html158" HREF="node11.htm">Byte Order</A>
<B>Up:</B> <A NAME="tex2html156" HREF="node9.htm">Description of the MIPS </A>
<B> Previous:</B> <A NAME="tex2html150" HREF="node9.htm">Description of the MIPS </A>
<P><ADDRESS>
<I>David A. Carley <BR>
Thu Jul 24 11:21:53 CDT 1997</I>
</ADDRESS>
</BODY>
</HTML>
